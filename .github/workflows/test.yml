on:
  pull_request:
  push:
    branches:
      - master

name: Test with Code Coverage

jobs:
  test:
    name: Test
    env:
      PROJECT_NAME_UNDERSCORE: "portfolio_cli"
      CARGO_TERM_COLOR: always
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Cache dependencies
        uses: actions/cache@v3.0.7
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}
      - name: Create Settings.toml
        env:
          TEST_INFURA_API_KEY: ${{ secrets.TEST_INFURA_API_KEY }}
          TEST_ETHERSCAN_API_KEY: ${{ secrets.TEST_ETHERSCAN_API_KEY }}
          TEST_ETHPLORER_API_KEY: ${{ secrets.TEST_ETHPLORER_API_KEY }}
        run: echo "test_infura = \"$TEST_INFURA_API_KEY\"" > Settings.toml; echo "test_etherscan = \"$TEST_ETHERSCAN_API_KEY\"" >> Settings.toml; echo "test_ethplorer = \"$TEST_ETHPLORER_API_KEY\"" >> Settings.toml
      - name: Generate test result and coverage report
        run: |
          cargo install cargo2junit grcov;
          cargo test $CARGO_OPTIONS -- -Z unstable-options --format json | cargo2junit > results.xml;
          zip -0 ccov.zip `find . \( -name "$PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
          grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" --ignore "tests/*" -o lcov.info;
      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          junit_files: results.xml
      - name: Upload to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: true
